function iter$(a){ return a ? (a.toArray ? a.toArray() : a) : []; };
var Imba = require('imba'), _2 = Imba.createTagList, _1 = Imba.createElement;
var Radio = require('./Controls').Radio;

var CastTopicField = Imba.defineTag('CastTopicField', function(tag){
	tag.prototype.label = function(v){ return this._label; }
	tag.prototype.setLabel = function(v){ this._label = v; return this; };
	tag.prototype.render = function (){
		var $ = this.$, self = this;
		var value = self.value();
		
		return self.$open(0).setChildren([
			self.label() ? (
				($[0] || _1('label',$,0,self).flag('title')).setContent(self.label(),3)
			) : void(0),
			($[1] || _1('div',$,1,self).flag('Radios').flag('group')).setContent(
				(function tagLoop($0) {
					for (let i = 0, items = iter$(self.api().db().topics().all()), len = $0.taglen = items.length, topic; i < len; i++) {
						topic = items[i];
						($0[i] || _1(Radio,$0,i).setName('topic_id')).setFlag(0,topic.id).setValue(topic.id,1).setLabel(topic.name).end();
					};return $0;
				})($[2] || _2($,2,$[1]))
			,4)
		],1).synced();
	};
	
	tag.prototype.value = function (){
		var checked = this.dom().querySelector('input:checked');
		return checked && checked.value || null;
	};
	
	tag.prototype.onchange = function (e){
		this.render();
		return this;
	};
})
exports.CastTopicField = CastTopicField;
