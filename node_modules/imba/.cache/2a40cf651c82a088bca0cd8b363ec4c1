var Imba = require('imba');
var Resource$ = require('../store/Resource'), Resource = Resource$.Resource, MASK = Resource$.MASK, ACCESS = Resource$.ACCESS;

function Group(){ return Resource.apply(this,arguments) };

Imba.subclass(Group,Resource);
exports.Group = Group; // export class 
Group.prototype.dependsOn = function (){
	return [];
};

Group.prototype.casts = function (){
	var self = this;
	return self._cache.casts || (self._cache.casts = self.db().casts().sel({sort: ['-published_at','-created_at']},function(_0) { return _0.gid == self.id && !_0.archived_at; }));
};

Group.prototype.drafts = function (){
	return this._cache.drafts || (this._cache.drafts = this.casts().sel({sort: '-created_at'},function(_0) { return _0.type == 'tutorial' && !_0.pub; }));
};

Group.prototype.playlists = function (){
	var self = this;
	return self._cache.playlists || (self._cache.playlists = self.db().playlists().sel(function(_0) { return _0.gid == self.id && !_0.archived_at; }));
};

Group.prototype.memberships = function (){
	var self = this;
	return self._cache.memberships || (self._cache.memberships = self.db().memberships().sel(function(_0) { return _0.gid == self.id; }));
};


Group.prototype.membership = function (uid){
	if(uid === undefined) uid = 'anon';
	return this._cache[uid] || (this._cache[uid] = this.memberships().first(function(item) { return item.uid == uid; }));
};


Group.prototype.url = function (){
	return ("/g/" + (this.id));
};
