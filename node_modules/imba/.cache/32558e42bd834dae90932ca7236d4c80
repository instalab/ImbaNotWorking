var Imba = require('imba'), _1 = Imba.createElement;
var Dialog = require('uxa').Dialog;

var LocalBranchDialog = Imba.defineTag('LocalBranchDialog', Dialog, function(tag){
	
	tag.prototype.branch = function (){
		return this.data();
	};
	
	tag.prototype.space = function (){
		return this.branch().space();
	};
	
	tag.prototype.trunk = function (){
		return this.space().trunk();
	};
	
	tag.prototype.cancelLabel = function (){
		return "play around";
	};
	
	tag.prototype.submitLabel = function (){
		return this.trunk().myFork() ? "goto your fork" : "create fork";
	};
	
	tag.prototype.onuxasubmit = function (){
		var self = this;
		return self.uxa().queue().add(100,async function() {
			var user = await self.api().tryLogin();
			if (!user) {
				throw new Error("You must be logged in to create a fork");
			};
			
			await self.space().navigateTo(self.trunk());
			var branch = await self.trunk().upsertResponse();
			return self.space().navigateTo(branch,'watching');
		});
	};
	
	tag.prototype.body = function (){
		let $ = this.$$ || (this.$$ = {}), t0;
		return (t0 = this._body = this._body||(t0=_1('div',this)).flag('body')).setContent(
			(this.trunk().isLab() && this.trunk().myFork()) ? Imba.static([
				(t0.$.A || _1('p',t0.$,'A',t0).setText("You already have a fork of this playground.\nYou will not be able to save these changes.")),
				(t0.$.B || _1('p',t0.$,'B',t0).setText("Do you want to open your fork?"))
			],2,1) : (this.trunk().isLab() ? (
				(t0.$.C || _1('p',t0.$,'C',t0).setText("You have started editing a playground created by someone else.\nWould you like to create your own fork? (Recommended)"))
			) : void(0))
		,3);
	};
})
exports.LocalBranchDialog = LocalBranchDialog;
