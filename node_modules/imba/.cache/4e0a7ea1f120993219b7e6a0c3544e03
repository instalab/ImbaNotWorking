var Imba = require('imba'), _1 = Imba.createElement;
var uxa$ = require('uxa'), Dialog = uxa$.Dialog, TextField = uxa$.TextField, TextArea = uxa$.TextArea;

var AskDialog = Imba.defineTag('AskDialog', Dialog, function(tag){
	
	tag.prototype.offset = function(v){ return this._offset; }
	tag.prototype.setOffset = function(v){ this._offset = v; return this; };
	tag.prototype.anchor = function(v){ return this._anchor; }
	tag.prototype.setAnchor = function(v){ this._anchor = v; return this; };
	
	// anchor must be rich in dialog to show filename / paths etc
	tag.prototype.space = function (){
		return this.data();
	};
	
	tag.prototype.onuxasubmit = function (e){
		var self = this;
		return self.uxa().queue().add(200,async function() {
			var offset_;
			await self.api().tryLogin();
			
			var params = self.formData();
			if ((typeof (offset_ = self.offset())=='number'||offset_ instanceof Number)) { params.offset = self.offset() };
			if (self.anchor()) { params.anchor = self.anchor() };
			params.uid = self.api().uid();
			console.log("commenting",params);
			return await self.api().rpc('castComment',[self.space().id(),params]);
		});
	};
	
	tag.prototype.body = function (){
		let $ = this.$$ || (this.$$ = {}), t0;
		return (t0 = this._body = this._body||(t0=_1('div',this)).flag('body')).setContent([
			(t0.$.A || _1('h1',t0.$,'A',t0).setText("Ask question")),
			(t0.$.B || _1(TextArea,t0.$,'B',t0).flag('autofocus').setName('body').setLabel("Your question")).end(),
			this.offset() ? (
				(t0.$.C || _1('h3',t0.$,'C',t0)).setText("Question is linked to offset " + this.offset())
			) : void(0),
			this.anchor() ? (
				(t0.$.D || _1('h3',t0.$,'D',t0)).setText("Question is linked to anchor " + JSON.stringify(this.anchor()))
			) : void(0)
		],1);
	};
})
exports.AskDialog = AskDialog;
