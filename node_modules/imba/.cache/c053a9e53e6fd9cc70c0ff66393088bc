function iter$(a){ return a ? (a.toArray ? a.toArray() : a) : []; };
var Imba = require('imba'), _2 = Imba.createTagList, _1 = Imba.createElement;
var AgentState = Imba.defineTag('AgentState', function(tag){
	tag.prototype.render = function (){
		var $ = this.$, self = this;
		var custom = Object.keys(self.data()._data).filter(function(_0) { return (/^\-?\d+$/).test(_0); });
		return self.$open(0).flag('SidebarPanel').setChildren([
			self._header = self._header||_1('header',self).flag('header').setContent(
				$[0] || _1('div',$,0,self._header).flag('title')
			,2),
			(function tagLoop($0) {
				var t0;
				for (let i = 0, items = iter$(custom), len = $0.taglen = items.length, wid; i < len; i++) {
					wid = items[i];
					(t0 = $0[i] || (t0=_1('div',$0,i))).setContent((function tagLoop($0) {
						var t1;
						for (let o = self.data()._data[wid], value, j = 0, keys = Object.keys(o), l = $0.taglen = keys.length, key; j < l; j++){
							key = keys[j];value = o[key];(t1 = $0[j] || (t1=_1('div',$0,j)).flag('SidebarEntry').setContent(
								t1.$.A || _1('div',t1.$,'A',t1).flag('head').setContent([
									_1('i',t1.$,'B','A').flag('icon').flag('json'),
									_1('span',t1.$,'C','A').flag('name'),
									_1('span',t1.$,'D','A').flag('semver').flag('dim')
								],2)
							,2)).end((
								t1.$.C.setContent(wid + '.' + key,3),
								t1.$.D.setContent(JSON.stringify(value),3)
							,true));
						};return $0;
					})(t0.$['A'] || _2(t0.$,'A',$0[i])),4);
				};return $0;
			})($[1] || _2($,1))
		],1).synced((
			$[0].setContent(self.data().name(),3)
		,true));
	};
});

var DebugView = Imba.defineTag('DebugView', function(tag){
	
	tag.prototype.props = function (){
		var props = {};
		
		var add = function(agent) {
			var ids = Object.keys(agent._data).filter(function(_0) { return (/^\-?\d+$/).test(_0); });
			let res = [];
			for (let i = 0, items = iter$(ids), len = items.length, id; i < len; i++) {
				// let obj = props[id] ||= {}
				id = items[i];
				let res1 = [];
				for (let o = agent._data[id], value, j = 0, keys = Object.keys(o), l = keys.length, name; j < l; j++){
					name = keys[j];value = o[name];let key = id + '.' + name;
					props[key] || (props[key] = []);
					res1.push(props[key].push([agent,value]));
				};
				res.push(res1);
			};
			return res;
		};
		
		for (let i = 0, items = iter$(this.data().agents()), len = items.length; i < len; i++) {
			add(items[i]);
		};
		
		add(this.data().spectator());
		
		return props;
	};
	
	tag.prototype.peer = function (){
		
	};
	
	
	tag.prototype.render = function (){
		var $ = this.$, self = this;
		return self.$open(0).setChildren($.$ = $.$ || [
			_1('div',$,0,self).flag('SidebarPanel'),
			_1('div',$,8,self).flag('SidebarPanel')
		
		// for agent in data.agents
		// 	<AgentState[agent]>
		// <AgentState[data.spectator]>
		],2).synced((
			$[0].setContent([
				($[1] || _1('header',$,1,0).flag('header').setContent($[2] || _1('div',$,2,1).flag('title').setText("Debug"),2)),
				self.data().branch().host() ? (
					($[3] || _1('div',$,3,0).flag('SidebarEntry').setContent($[4] || _1('div',$,4,3).flag('head').setContent([
						_1('i',$,5,4).flag('icon').flag('json'),
						_1('div',$,6,4).flag('field').flag('range').setContent(
							$[7] || _1('input',$,7,6).setType('range').setMin(0).setMax(5000).setStep(100)
						,2)
					],2),2)).end((
						$[7].bindData(self.data().branch().host().rtc(),'emulatedLatency',[]).end()
					,true))
				) : void(0)
			],1),
			$[8].setContent([
				$[9] || _1('header',$,9,8).flag('header').setContent($[10] || _1('div',$,10,9).flag('title').setText("Agents"),2),
				(function tagLoop($0) {
					var t0;
					for (let o = self.props(), entry, i = 0, keys = Object.keys(o), l = $0.taglen = keys.length, name; i < l; i++){
						name = keys[i];entry = o[name];(t0 = $0[i] || (t0=_1('div',$0,i)).flag('SidebarEntry').setContent(
							t0.$.A || _1('div',t0.$,'A',t0).flag('head')
						,2)).end((
							t0.$.A.setContent([
								t0.$.B || _1('i',t0.$,'B','A').flag('icon').flag('json'),
								t0.$.C || _1('span',t0.$,'C','A').flag('name'),
								(function tagLoop($0) {
									for (let j = 0, items = iter$(entry), len = $0.taglen = items.length, val; j < len; j++) {
										val = items[j];
										($0[j] || _1('span',$0,j).flag('agent-value').flag('dim')).setFlag(0,("agent-" + (val[0].color()))).setContent(JSON.stringify(val[1]),3);
									};return $0;
								})(t0.$['D'] || _2(t0.$,'D',t0.$.A))
							],1).end((
								t0.$.C.setContent(name,3)
							,true))
						,true));
					};return $0;
				})($[11] || _2($,11,$[8]))
			],1)
		,true));
	};
})
exports.DebugView = DebugView;
