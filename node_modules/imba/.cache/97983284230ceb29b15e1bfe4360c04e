var self = {};
var mandrill = require('mandrill-api');
var env = require('../env');
var apiKey = env.get('MANDRILL_API_KEY');

var DB = require('../store/db').DB;
var sdb = DB.instance();

var connection;

exports.mailer = self.mailer = function (){
	return connection || (connection = new (mandrill.Mandrill)(apiKey));
};

exports.sendTemplate = self.sendTemplate = function (to,name,vars){
	var merge_vars = [];
	for (let k in vars){
		let v;
		v = vars[k];merge_vars.push({name: k,content: v});
	};
	
	var message = {
		to: [to],
		merge_language: 'handlebars',
		global_merge_vars: merge_vars
	};
	
	var tpl = {
		template_name: name,
		template_content: [],
		message: message
	};
	
	var prom = new Promise(function(resolve,reject) {
		return self.mailer().messages.sendTemplate(tpl,resolve,reject);
	});
	
	// Wrap in object
	return prom.then(function(res) { return {results: res}; });
};

exports.sendForgotPassword = self.sendForgotPassword = async function (jobId){
	var job = await sdb.fetch(jobId);
	var user = await sdb.fetch(job.uid);
	var vars = {
		resetUrl: ("https://scrimba.com/#reset:" + (job.id) + ":" + (job.params.token))
	};
	var to = {
		email: user.email,
		name: user.name || user.username
	};
	var promise = self.sendTemplate(to,'reset-password',vars);
	return job.updateFromPromise(promise);
};
