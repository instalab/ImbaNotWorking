
var debug = require('debug');

// externs;

function Logger(){
	this._contexts = {};
	this._enabled = false ? true : true;
	this;
};


exports.Logger = Logger; // export class 
Logger.prototype.enabled = function(v){ return this._enabled; }
Logger.prototype.setEnabled = function(v){ this._enabled = v; return this; };

Logger.prototype.log = function (context){
	var $0 = arguments, i = $0.length;
	var params = new Array(i>1 ? i-1 : 0);
	while(i>1) params[--i - 1] = $0[i];
	if (!this._enabled) { return };
	var ctx = this._contexts[context] || (this._contexts[context] = debug('scrimba:' + context));
	return ctx.apply(this,params);
};
