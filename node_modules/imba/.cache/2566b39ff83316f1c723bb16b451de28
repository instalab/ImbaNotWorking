function len$(a){
	return a && (a.len instanceof Function ? a.len() : a.length) || 0;
};
function iter$(a){ return a ? (a.toArray ? a.toArray() : a) : []; };
var Imba = require('imba'), _3 = Imba.createTagList, _2 = Imba.createTagMap, _1 = Imba.createElement;
var Page = require('./Page').Page;

var UserAvatar = require('../components/UserAvatar').UserAvatar;
var PlaylistSection = require('../components/PlaylistSection').PlaylistSection;
var CollectionSection = require('../components/CollectionSection').CollectionSection;
var CastTile$ = require('../components/CastTile'), CastTile = CastTile$.CastTile, CastListItem = CastTile$.CastListItem;
var Carousel = require('../components/Carousel').Carousel;

var PlaylistTile = require('../components/PlaylistTile').PlaylistTile;
var GroupTile = require('../components/GroupTile').GroupTile;
var UserTile = require('../components/UserTile').UserTile;


var uxa$ = require('uxa'), Button = uxa$.Button, Actionable = uxa$.Actionable;

var TopicFilter = Imba.defineTag('TopicFilter', function(tag){
	tag.prototype.value = function(v){ return this._value; }
	tag.prototype.setValue = function(v){ this._value = v; return this; };
	tag.prototype.name = function(v){ return this._name; }
	tag.prototype.setName = function(v){ this._name = v; return this; };
	
	tag.prototype.render = function (){
		var $ = this.$, self = this;
		return self.$open(0).flagIf('has-selection',(self.value())).setChildren([
			($[0] || _1('a',$,0,self).flag('tpb').flag('pill').flag('all').setHref("/").setText("All")).end(),
			(function tagLoop($0) {
				var $$ = $0.$iter();
				for (let i = 0, items = iter$(self.data()), len = items.length, item; i < len; i++) {
					item = items[i];
					if (item.v < 0) { continue; };
					$$.push(($0[i] || _1('a',$0,i).flag('tpb').flag('pill')).setData(item).setFlag(0,item.id).flagIf('selected',(self.value() == item.id)).setHref(("/" + (item.id))).setContent(item.name,3).end());
				};return $$;
			})($[1] || _2($,1))
		],1).synced();
	};
	
	tag.prototype.ontap = function (e){
		return;
	};
});

var HomePage = Imba.defineTag('HomePage', Page, function(tag){
	
	tag.prototype.courses = function(v){ return this._courses; }
	tag.prototype.setCourses = function(v){ this._courses = v; return this; };
	tag.prototype.casts = function(v){ return this._casts; }
	tag.prototype.setCasts = function(v){ this._casts = v; return this; };
	tag.prototype.playlists = function(v){ return this._playlists; }
	tag.prototype.setPlaylists = function(v){ this._playlists = v; return this; };
	tag.prototype.featured = function(v){ return this._featured; }
	tag.prototype.setFeatured = function(v){ this._featured = v; return this; };
	tag.prototype.history = function(v){ return this._history; }
	tag.prototype.setHistory = function(v){ this._history = v; return this; };
	tag.prototype.instructors = function(v){ return this._instructors; }
	tag.prototype.setInstructors = function(v){ this._instructors = v; return this; };
	
	
	tag.prototype.path = function (){
		return [];
	};
	
	tag.prototype.load = async function (){
		var instructors_, history_, v_, courses_, casts_, playlists_;
		await this.api().prefetch('home');
		let uid = this.api().uid();
		if (false && uid) {
			(history_ = this.history()) || ((this.setHistory(v_ = this.api().db().viewings().sel({sort: '-updated_at'},function(_0) { return _0.uid == uid; })),v_));
		};
		(courses_ = this.courses()) || ((this.setCourses(v_ = this.api().db().groups().sel({sort: '-created_at'},function(_0) { return _0.type == 'course' && _0.coverart; })),v_));
		(casts_ = this.casts()) || ((this.setCasts(v_ = this.api().db().spaces().sel({sort: '-published_at'},function(_0) {
			return _0.published_at && !_0.archived_at && _0.privacy == 'public' && _0.type == 'tutorial';
		})),v_));
		
		(playlists_ = this.playlists()) || ((this.setPlaylists(v_ = this.api().db().playlists().sel({sort: '-featured_at'},function(_0) {
			return _0.featured_at && !_0.archived_at && _0.privacy == 'public';
		})),v_));
		return (instructors_ = this.instructors()) || ((this.setInstructors(v_ = this.api().db().users().sel({sort: '-karma'},function(_0) { return _0.karma > 0; })),v_));
	};
	
	
	tag.prototype.mount = function (){
		this.schedule({events: true});
		App.setScrollTop(0);
		return this.render();
	};
	
	tag.prototype.unmount = function (){
		return this.unschedule();
	};
	
	tag.prototype.start = function (e){
		this.trigger('castnew');
		e.prevent().halt();
		return this;
	};
	
	tag.prototype.render = function (){
		var $ = this.$;
		let user = this.api().user();
		let picks = this.playlists().at(0);
		
		return this.$open(0).setChildren([
			$[0] || _1('header',$,0,this).setContent(
				$[1] || _1('div',$,1,0).flag('wide').flag('what').setContent([
					_1('h1',$,2,1).setText("Hello, future expert"),
					_1('p',$,3,1).flag('lead').setText("Scrimba is a powerful new way of learning code.\nPlay around with the instructors code any time, right in the player."),
					_1('div',$,4,1).flag('cta').setContent($[5] || _1('a',$,5,4).setHref("/c/cKp6LhL").setText("Read more"),2)
				],2)
			,2),
			
			$[6] || _1('article',$,6,this).flag('wide'),
			this.footer()
		],1).synced((
			$[5].end(),
			$[6].setContent([
				($[7] || _1('div',$,7,6).flag('section').flag('Section').setContent([
					_1('header',$,8,7).flag('header').setContent($[9] || _1('h2',$,9,8).flag('title').setText("Latest courses"),2),
					_1(Carousel,$,10,7).flag('lg').setLimit(24).setInfinite(true)
				],2)).end((
					$[10].bindData(this,'courses',[]).setRenderer(GroupTile.Renderer).end()
				,true)),
				(user && this.history()) ? (
					($[11] || _1('div',$,11,6).flag('section').flag('Section').setContent([
						_1('header',$,12,11).flag('header').setContent($[13] || _1('h2',$,13,12).flag('title').setText("Continue watching"),2),
						_1(Carousel,$,14,11).flag('dense').flag('sm').setRows(1).setLimit(12).setInfinite(true)
					],2)).end((
						$[14].setData(this.history().map(function(_0) { return _0.cast(); })).setRenderer(CastTile.Renderer).end()
					,true))
				) : void(0),
				
				($[15] || _1(PlaylistSection,$,15,6).flag('section').setLayout('slider').setSize('md')).setData(picks).end(),
				
				(this.instructors() && len$(this.instructors())) ? (
					($[16] || _1('div',$,16,6).flag('section').flag('Section').setContent([
						_1('header',$,17,16).flag('header').setContent($[18] || _1('h2',$,18,17).flag('title').setText("Popular instructors"),2),
						_1(Carousel,$,19,16).flag('users').flag('sm').setRows(1).setInfinite(true).setLimit(12)
					],2)).end((
						$[19].bindData(this,'instructors',[]).setRenderer(UserTile.Renderer).end()
					,true))
				) : void(0),
				
				($[20] || _1('div',$,20,6).flag('section').flag('Section').setContent([
					_1('header',$,21,20).flag('header').setContent($[22] || _1('h2',$,22,21).flag('title').setText("Recently published"),2),
					_1(Carousel,$,23,20).flag('sm').setRows(1).setInfinite(true)
				],2)).end((
					$[23].bindData(this,'casts',[]).setRenderer(CastTile.Renderer).setLimit((false ? true : 8)).end()
				,true))
			],1)
		,true));
	};
})
exports.HomePage = HomePage;
