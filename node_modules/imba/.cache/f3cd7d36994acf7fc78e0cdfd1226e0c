var Imba = require('imba');
var AGENT = require('../protocol').AGENT;
var Widget = require('./widget').Widget;
var FileWidget = require('./FileWidget').FileWidget;
var F = AGENT.FLAGS;

function Agent(){ return Widget.apply(this,arguments) };

Imba.subclass(Agent,Widget);
exports.Agent = Agent; // export class 
Agent.register('agent',AGENT);

Agent.prototype.name = function(v){ return this.getAttribute('name'); }
Agent.prototype.setName = function(v){ this.setAttribute('name',v); return this; };
Agent.prototype.body = function(v){ return this.getAttribute('body'); }
Agent.prototype.setBody = function(v){ this.setAttribute('body',v); return this; };
Agent.prototype.uid = function(v){ return this.getAttribute('uid'); }
Agent.prototype.setUid = function(v){ this.setAttribute('uid',v); return this; };
Agent.prototype.sid = function(v){ return this.getAttribute('sid'); }
Agent.prototype.setSid = function(v){ this.setAttribute('sid',v); return this; };
Agent.prototype.token = function(v){ return this.getAttribute('token'); }
Agent.prototype.setToken = function(v){ this.setAttribute('token',v); return this; };
Agent.prototype.color = function(v){ return this.getAttribute('color'); }
Agent.prototype.setColor = function(v){ this.setAttribute('color',v); return this; };
Agent.prototype.kind = function(v){ return this.getAttribute('kind'); }
Agent.prototype.setKind = function(v){ this.setAttribute('kind',v); return this; };
Agent.prototype.user_id = function(v){ return this.getAttribute('user_id'); }
Agent.prototype.setUser_id = function(v){ this.setAttribute('user_id',v); return this; };

Agent.prototype.editing = function(v){ return this._editing; }
Agent.prototype.setEditing = function(v){ this._editing = v; return this; };
Agent.prototype.audio = function(v){ return this._audio; }
Agent.prototype.setAudio = function(v){ this._audio = v; return this; };

// the widget that is currently in focus
Agent.option('focus',{type: 'widget',triggerAsync: ['refocus'],overridable: true});

// the main widget the agent is displaying
Agent.option('file',{type: 'widget',triggerAsync: ['refocus'],override: 'pause'});

// widget -- really? what about views then?
Agent.option('hover',{type: 'widget',overridable: true});

// should probably be declared somewhere else
Agent.option('vw',{overridable: true});
Agent.option('vh',{overridable: true});

Agent.prototype.setup = function (){
	this.space().widgets().add(this,this.id());
	return this;
};

Agent.prototype.file = function (opts){
	return this.options().get('file',opts) || this.space().files().at(0);
};

Agent.prototype.isLocal = function (){
	return false;
};

Agent.prototype.isRecording = function (){
	return false;
};
