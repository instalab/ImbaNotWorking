var self = {};

// currently 
exports.diffString = self.diffString = function (str0,str1){
	var i = 0;
	var l = Math.max(str0.length,str1.length);
	
	var left = 0;
	// find first part that is different
	while (i < l){
		var chr0 = str0[i];
		var chr1 = str1[i];
		i++;
		
		if (chr0 == chr1) {
			left++;
		} else {
			break;
		};
	};
	
	
	// go from the end -- look at first part that is the same
	var right = l;
	i = l;
	
	var l0 = str0.length;
	var l1 = str1.length;
	
	while (i > 0){
		i--;
		chr0 = str0[--l0];
		chr1 = str1[--l1];
		
		if (chr0 == chr1) {
			right--;
		} else {
			break;
		};
	};
	
	right = l0 + 1;
	var ins = str1.slice(left,l1 + 1);
	
	if (str1.length < 6) {
		return str1;
	};
	// return startIndex, endIndex, replaceTe
	
	return [left,right,ins];
};


exports.patchString = self.patchString = function (str,diff){
	if (diff instanceof Array) {
		return str.substr(0,diff[0]) + diff[2] + str.slice(diff[1]);
	} else {
		return diff;
	};
};
