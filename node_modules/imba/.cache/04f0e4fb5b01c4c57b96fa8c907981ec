function iter$(a){ return a ? (a.toArray ? a.toArray() : a) : []; };
var Imba = require('imba'), _2 = Imba.createTagList, _1 = Imba.createElement;
var Main$ = require('./Main'), Main = Main$.Main, Sheet = Main$.Sheet, Aside = Main$.Aside, Tab = Main$.Tab, Section = Main$.Section, Role = Main$.Role, Avatar = Main$.Avatar;

var UserAvatar = Imba.defineTag('UserAvatar', 'span', function(tag){
	tag.prototype.__s = {'default': 100,name: 's'};
	tag.prototype.s = function(v){ return this._s; }
	tag.prototype.setS = function(v){ this._s = v; return this; }
	tag.prototype._s = 100;
	
	tag.prototype.src = function (){
		if (this.data()) {
			return ("url('" + this.data().avatarUrl(this.s()) + "')");
		} else {
			return "none";
		};
	};
	
	tag.prototype.render = function (){
		return this.$open(0).flag('Avatar').flagIf('anon',(!(this.data()))).css('background-image',this.src()).synced();
	};
})
exports.UserAvatar = UserAvatar;

var UserRole = Imba.defineTag('UserRole', function(tag){
	tag.prototype.entity = function(v){ return this._entity; }
	tag.prototype.setEntity = function(v){ this._entity = v; return this; };
	
	tag.prototype.user = function (){
		return this.data();
	};
	
	tag.prototype.role = function (){
		return this.entity().roles()[this.user().id];
	};
	
	tag.prototype.render = function (){
		var $ = this.$;
		return this.$open(0).flag('tr').setChildren($.$ = $.$ || [
			_1('div',$,0,this).flag('td').flag('avatar').setContent($[1] || _1(Avatar,$,1,0),2),
			_1('div',$,2,this).flag('td').flag('main').setContent([
				_1('div',$,3,2).flag('name').flag('h4').setContent($[4] || _1('a',$,4,3),2),
				_1('div',$,5,2).flag('login').flag('legend')
			],2),
			_1('div',$,6,this).flag('td').flag('role').flag('tac').flag('dim').setContent($[7] || _1(Role,$,7,6),2)
		],2).synced((
			$[1].bindData(this,'user',[]).end(),
			$[4].setHref(this.user().url()).setContent(this.user().name || this.user().username,3).end(),
			$[5].setContent(this.user().username,3),
			$[7].bindData(this,'role',[]).end()
		,true));
	};
})
exports.UserRole = UserRole;


var EntityUsers = Imba.defineTag('EntityUsers', Main, function(tag){
	tag.prototype.entity = function (){
		return this.data().entity();
	};
	
	tag.prototype.render = function (){
		var $ = this.$, self = this;
		if (!(self.entity())) { return };
		
		return self.$open(0).setChildren($.$ = $.$ || [
			_1('h1',$,0,self).setText("List of users(!)"),
			_1('section',$,1,self).flag('Section').setContent(
				$[2] || _1('div',$,2,1).flag('table')
			,2)
		],2).synced((
			$[2].setContent((function tagLoop($0) {
				for (let i = 0, items = iter$(self.entity().users()), len = $0.taglen = items.length; i < len; i++) {
					($0[i] || _1(UserRole,$0,i).flag('tr')).setData(items[i]).setEntity(self.entity()).end();
				};return $0;
			})($[3] || _2($,3,$[2])),4)
		,true));
	};
})
exports.EntityUsers = EntityUsers;

