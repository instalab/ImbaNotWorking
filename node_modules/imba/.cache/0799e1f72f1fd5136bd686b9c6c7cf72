var Imba = require('imba'), _1 = Imba.createElement;
var IconButton = require('uxa').IconButton;
var Carousel = require('./Carousel').Carousel;
var CastTile = require('./CastTile').CastTile;

var PlaylistSection = Imba.defineTag('PlaylistSection', function(tag){
	
	tag.prototype.layout = function(v){ return this._layout; }
	tag.prototype.setLayout = function(v){ this._layout = v; return this; };
	tag.prototype.__pinCount = {'default': 0,name: 'pinCount'};
	tag.prototype.pinCount = function(v){ return this._pinCount; }
	tag.prototype.setPinCount = function(v){ this._pinCount = v; return this; }
	tag.prototype._pinCount = 0;
	tag.prototype.__size = {'default': 'sm',name: 'size'};
	tag.prototype.size = function(v){ return this._size; }
	tag.prototype.setSize = function(v){ this._size = v; return this; }
	tag.prototype._size = 'sm';
	
	tag.prototype.renderer = function (cast,key,context){
		let key_, $ = this.$$ || (this.$$ = {}), $1;
		return ($[($1 = 'key$' + key)] || _1(CastTile,$,$1,this)).setData(cast).setContext(context).end();
	};
	
	tag.prototype.render = function (){
		var $ = this.$;
		var opts = {playlist: this.data()};
		return this.$open(0).flag('Section').setFlag(-1,this.data().id).setChildren($.$ = $.$ || [
			_1('header',$,0,this).flag('header'),
			_1(Carousel,$,5,this).flag('dense')
		],2).synced((
			$[0].setContent([
				this.data().can(this.api().user(),'edit') ? (
					($[1] || _1('div',$,1,0).flag('actions').setContent($[2] || _1(IconButton,$,2,1).setAction('playlistmenu').setIcon('.'),2)).end((
						$[2].end()
					,true))
				) : void(0),
				
				($[3] || _1('h2',$,3,0).flag('title').setContent($[4] || _1('a',$,4,3),2)).end((
					$[4].setHref(("/playlist/" + (this.data().id))).setContent(this.data().title,3).end()
				,true))
			// <.desc.muted uxa:md=data:description>
			],1),
			$[5].bindData(this.data(),'items',[]).setFlag(0,this.size()).setRenderer(this.renderer).setContext(this.data()).end()
		,true));
	};
})
exports.PlaylistSection = PlaylistSection;
