function Stylesheet(file,options){
	var self = this;
	if(options === undefined) options = {};
	self._options = options;
	self._file = file;
	self._dom = true && {};
	self._dom.setAttribute('data-name',file.name());
	self._dom.innerHTML = '.item { }';
	
	file.on('modified',function() { return self.refresh(); });
	self.refresh();
	self;
};

exports.Stylesheet = Stylesheet; // export class 
Stylesheet.prototype.options = function(v){ return this._options; }
Stylesheet.prototype.setOptions = function(v){ this._options = v; return this; };
Stylesheet.prototype.file = function(v){ return this._file; }
Stylesheet.prototype.setFile = function(v){ this._file = v; return this; };
Stylesheet.prototype.dom = function(v){ return this._dom; }
Stylesheet.prototype.setDom = function(v){ this._dom = v; return this; };
Stylesheet.prototype.__doc = {watch: 'docDidSet',name: 'doc'};
Stylesheet.prototype.doc = function(v){ return this._doc; }
Stylesheet.prototype.setDoc = function(v){
	var a = this.doc();
	if(v != a) { this._doc = v; }
	if(v != a) { this.docDidSet && this.docDidSet(v,a,this.__doc) }
	return this;
};

Stylesheet.forFile = function (file){
	return file;
};

Stylesheet.prototype.docDidSet = function (new$,prev){
	if (true) { return };
	
	if (this.dom().parentNode) {
		this.dom().parentNode.removeChild(this.dom());
	};
	
	if (new$) {
		this.doc().adoptNode(this.dom());
		return this.doc().head.appendChild(this.dom());
	} else {
		// make sure we adopt it away from sandbox
		return window.document.adoptNode(this.dom());
	};
};

Stylesheet.prototype.refresh = function (){
	var css = this.file().currentBody();
	if (this.options().fakePseudoStates) {
		css = css.replace(/:(hover|focus|active)/g,function(m,state) { return (".__" + state); });
	};
	return this.dom().innerHTML = css;
};
