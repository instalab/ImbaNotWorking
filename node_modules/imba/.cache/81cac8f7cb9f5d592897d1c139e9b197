var Imba = require('imba');
var ScrimbaGesture = require('./ScrimbaGesture').ScrimbaGesture;

function LayoutGesture(){
	LayoutGesture.prototype.__super__.constructor.apply(this,arguments);
	this.touch().capture();
	this._vp = this.target().data().space().layout().viewport();
	this._layout = this._options.layout.clone();
	this._left = this._layout[0];
	this._top = this._layout[1];
	this._width = this._layout[2];
	this._height = this._layout[3];
	this._tracker = this.target().data().space().pointerTracker();
	
	this._ax = 0;
	this._ay = 0;
	this;
};

Imba.subclass(LayoutGesture,ScrimbaGesture);
exports.LayoutGesture = LayoutGesture; // export class 
LayoutGesture.prototype.box = function(v){ return this._box; }
LayoutGesture.prototype.setBox = function(v){ this._box = v; return this; };
LayoutGesture.prototype.layout = function(v){ return this._layout; }
LayoutGesture.prototype.setLayout = function(v){ this._layout = v; return this; };
LayoutGesture.prototype.top = function(v){ return this._top; }
LayoutGesture.prototype.setTop = function(v){ this._top = v; return this; };
LayoutGesture.prototype.left = function(v){ return this._left; }
LayoutGesture.prototype.setLeft = function(v){ this._left = v; return this; };
LayoutGesture.prototype.width = function(v){ return this._width; }
LayoutGesture.prototype.setWidth = function(v){ this._width = v; return this; };
LayoutGesture.prototype.height = function(v){ return this._height; }
LayoutGesture.prototype.setHeight = function(v){ this._height = v; return this; };
LayoutGesture.prototype.vp = function(v){ return this._vp; }
LayoutGesture.prototype.setVp = function(v){ this._vp = v; return this; };

LayoutGesture.prototype.ax = function(v){ return this._ax; }
LayoutGesture.prototype.setAx = function(v){ this._ax = v; return this; };
LayoutGesture.prototype.ay = function(v){ return this._ay; }
LayoutGesture.prototype.setAy = function(v){ this._ay = v; return this; };

LayoutGesture.prototype.onresizestart = function (){
	var target_;
	var o = this.options();
	var box = this.target().dom().getBoundingClientRect();
	var rx = this.x() - box.left;
	var ry = this.y() - box.top;
	
	if (o.l || o.r || o.b || o.t) {
		if (o.l) {
			this.setAx(-1);
		} else if (o.r) {
			this.setAx(1);
		};
		
		if (o.b) {
			this.setAy(1);
		} else if (o.t) {
			this.setAy(-1);
		};
	} else {
		if (rx > (box.width - 20)) {
			this.setAx(1);
		} else if (rx < 20) {
			this.setAx(-1);
		};
		
		if (ry > (box.height - 20)) {
			this.setAy(1);
		} else if (ry < 20) {
			this.setAy(-1);
		};
	};
	
	return (target_ = this.target()) && target_.onresizestart  &&  target_.onresizestart(this);
};

LayoutGesture.prototype.onstart = function (t){
	if (this._tracker) {
		this._prevTargetLock = this._tracker.lockedOnTarget();
		this._tracker.setLockedOnTarget(this._tracker.targetForElement(this.target().dom()));
	};
	return LayoutGesture.prototype.__super__.onstart.apply(this,arguments);
};

LayoutGesture.prototype.teardown = function (){
	if (this._tracker) {
		this._tracker.setLockedOnTarget(this._prevTargetLock);
	};
	return LayoutGesture.prototype.__super__.teardown.apply(this,arguments);
};
