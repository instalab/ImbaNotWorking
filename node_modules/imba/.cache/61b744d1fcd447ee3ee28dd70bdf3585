var Imba = require('imba'), _1 = Imba.createElement;
var UserAvatar = require('./UserAvatar').UserAvatar;
var Formatters$ = require('./Formatters'), TimeAgo = Formatters$.TimeAgo, Duration = Formatters$.Duration, ShortCount = Formatters$.ShortCount, Format = Formatters$.Format;
var Tile = require('./Tile').Tile;
var IconButton = require('uxa').IconButton;

var CastPreview = require('./CastPreview').CastPreview;
var CastMenu = require('./CastMenu').CastMenu;

var CastListItem = Imba.defineTag('CastListItem', function(tag){
	
	tag.Renderer = function (data,key){
		let key_, $ = this.$$ || (this.$$ = {}), $1;
		return ($[($1 = 'key$' + key)] || _1(CastListItem,$,$1,this)).setData(data).end();
	};
	
	tag.prototype.title = function (){
		var parent_;
		return this.data().title || (parent_ = this.data().parent()) && parent_.title;
	};
	
	tag.prototype.desc = function (){
		return ("[" + this.title() + "](" + (this.data().url()) + ")");
	};
	
	tag.prototype.render = function (){
		var $ = this.$;
		if (!(this.data().v > 0 && (!this.data().CODE || this.data().CODE == 200))) { return };
		
		var user = this.api().get(this.data().uid);
		var uname = user ? ((user.name || user.username)) : "User";
		
		return this.$open(0).setFlag(-1,this.data().id).setFlag(-2,this.data().type).setFlag(-3,this.data().privacy).setChildren($.$ = $.$ || [
			_1('div',$,0,this).flag('actions').flag('sm').setContent($[1] || _1(IconButton,$,1,0).flag('inspect').setIcon('*'),2),
			_1('div',$,2,this).flag('main').setContent([
				_1('div',$,3,2).flag('text'),
				_1('div',$,4,2).flag('c1').flag('muted').setContent([
					"Created ",
					$[5] || _1(TimeAgo,$,5,4).flag('date')
				],2)
			],2)
		],2).synced((
			$[1].setAction(['castmenu',this.data()]).end(),
			$[3].setNestedAttr('uxa','md',this.desc()).end(),
			$[5].bindData(this.data(),'created_at').end()
		,true));
	};
})
exports.CastListItem = CastListItem;

var Progress = Imba.defineTag('Progress', function(tag){
	tag.prototype.__value = {watch: 'valueDidSet',name: 'value'};
	tag.prototype.value = function(v){ return this._value; }
	tag.prototype.setValue = function(v){
		var a = this.value();
		if(v != a) { this._value = v; }
		if(v != a) { this.valueDidSet && this.valueDidSet(v,a,this.__value) }
		return this;
	};
	
	tag.prototype.valueDidSet = function (val){
		let pct = parseInt(Math.min(1,Math.max(0.05,val)) * 100);
		return this.css('width',pct + '%');
	};
});

var CastTile = Imba.defineTag('CastTile', Tile, function(tag){
	
	tag.reg('c');
	
	tag.Renderer = function (data,key,context){
		let key_, $ = this.$$ || (this.$$ = {}), $1;
		return ($[($1 = 'key$' + key)] || _1(CastTile,$,$1,this)).setData(data).setContext(context).end();
	};
	
	tag.prototype.context = function(v){ return this._context; }
	tag.prototype.setContext = function(v){ this._context = v; return this; };
	
	tag.prototype.cast = function (){
		return this.data();
	};
	
	tag.prototype.playlist = function (){
		return this.context();
	};
	
	tag.prototype.url = function (){
		if (this.playlist()) {
			return ("/p/" + (this.playlist().id) + "/" + (this.data().id));
		} else {
			return ("/c/" + (this.data().id));
		};
	};
	
	
	tag.prototype.canEdit = function (){
		return this.data().uid == this.api().uid() || this.api().isMod();
	};
	
	tag.prototype.showMenu = function (e){
		return e.uxa().open((_1(CastMenu)).bindData(this,'data',[]).setContext(this.context()).end());
	};
	
	tag.prototype.abstract = function (){
		let desc = (this.data().description || '');
		return desc.slice(0,desc.indexOf('\n\n'));
	};
	
	tag.prototype.desc = function (){
		return ("# [" + (this.data().title) + "](" + this.url() + ")\n" + this.abstract());
	};
	
	tag.prototype.render = function (){
		var $ = this.$;
		var cast = this.cast();
		var viewing = cast.viewing(this.api().uid());
		
		if (!(cast.v > 0 && (!this.data().CODE || this.data().CODE == 200))) { return };
		
		var user = this.api().get(this.data().uid);
		var o = this.options();
		var uname = user ? ((user.name || user.username)) : "User";
		
		return this.$open(0).setFlag(-1,this.data().id).setFlag(-2,this.data().type).setFlag(-3,this.data().privacy).setFlag(-4,this.data().topic_id).flagIf('mine',(this.data().uid == this.api().uid())).flagIf('draft',(this.data().isDraft())).setChildren($.$ = $.$ || [
			_1(CastPreview,$,0,this).flag('figure'),
			// if user and $web$
			// 	<a.avatar href=user.url> <img.Avatar src=user.avatarUrl(64)>
			_1(Progress,$,1,this),
			_1('div',$,2,this).flag('summary').flag('abs').setContent([
				_1('div',$,3,2).flag('title').setContent($[4] || _1('a',$,4,3),2),
				_1('div',$,5,2).flag('credits').flag('muted').flag('bullets')
			],2)
		],2).synced((
			$[0].bindData(this,'data',[]).setType(this.data().type).end(),
			$[1].setValue((viewing && viewing.progress),1).end(),
			$[4].setHref(this.url()).setContent(this.data().isFork() ? ((this.data().parent() && this.data().parent().title)) : this.data().title,3).end(),
			$[5].setContent([
				this.data().isDraft() ? (
					($[6] || _1('span',$,6,5).flag('pill').flag('draft').setText("DRAFT"))
				) : void(0),
				($[7] || _1('span',$,7,5).flag('pill').flag('type')).setFlag(0,this.data().type),
				($[8] || _1('span',$,8,5).flag('user')).setContent(
					// <span> "By "
					user ? (
						($[9] || _1('a',$,9,8)).setHref(user.url()).setContent(uname,3).end()
					) : void(0)
				,3),
				this.data().duration ? (
					($[10] || _1('span',$,10,5).flag('duration')).setContent(Format.duration(this.data().duration),3)
				) : void(0),
				
				this.data().published_at ? (
					($[11] || _1('span',$,11,5).flag('age')).setContent(Format.timeAgo(this.data().published_at),3)
				) : void(0),
				
				this.data().can(this.api().user(),'edit') ? (
					($[12] || _1('span',$,12,5).setContent($[13] || _1('span',$,13,12).flag('tool').dataset('icon','mcog').on$(0,['tap','stop','showMenu'],this),2)).end((
						$[13].end()
					,true))
				) : void(0)
			],1)
		,true));
	};
})
exports.CastTile = CastTile;

