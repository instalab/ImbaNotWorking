function iter$(a){ return a ? (a.toArray ? a.toArray() : a) : []; };
function LongPromise(){
	this._value = undefined;
	this._resolved = false;
	this._listeners = [];
	this;
};

exports.LongPromise = LongPromise; // export class 
LongPromise.prototype.then = function (cb){
	if (this._resolved) {
		cb(this._value);
	} else {
		this._listeners.push(cb);
	};
	return this;
};

LongPromise.prototype.resolve = function (value){
	this._resolved = true;
	this._value = value;
	for (let i = 0, items = iter$(this._listeners), len = items.length; i < len; i++) {
		items[i](this._value);
	};
	this._listeners = [];
	return this;
};
