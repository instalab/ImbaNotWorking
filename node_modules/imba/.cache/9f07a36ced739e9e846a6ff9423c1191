function iter$(a){ return a ? (a.toArray ? a.toArray() : a) : []; };
var Imba = require('imba'), _2 = Imba.createTagList, _1 = Imba.createElement;

var Page = require('./Page').Page;
var CastTile = require('../components/CastTile').CastTile;

var uxa$ = require('uxa'), TextField = uxa$.TextField, Button = uxa$.Button;

var ResultGrid = Imba.defineTag('ResultGrid', function(tag){
	tag.prototype.casts = function(v){ return this._casts; }
	tag.prototype.setCasts = function(v){ this._casts = v; return this; };
	
	tag.prototype.render = function (){
		var self = this, $ = this.$;
		return self.$open(0).setChildren(
			(function tagLoop($0) {
				var t0;
				for (let i = 0, items = iter$(self.casts()), len = $0.taglen = items.length; i < len; i++) {
					(t0 = $0[i] || (t0=_1('div',$0,i)).flag('Item').setContent(t0.$.A || _1(CastTile,t0.$,'A',t0),2)).end((
						t0.$.A.setData(items[i]).end()
					,true));
				};return $0;
			})($[0] || _2($,0))
		,4).synced();
	};
});

var SearchPage = Imba.defineTag('SearchPage', Page, function(tag){
	tag.prototype.ids = function(v){ return this._ids; }
	tag.prototype.setIds = function(v){ this._ids = v; return this; };
	tag.prototype.query = function(v){ return this._query; }
	tag.prototype.setQuery = function(v){ this._query = v; return this; };
	
	tag.prototype.title = function (){
		return ("Scrimba - Search for " + this.query());
	};
	
	tag.prototype.casts = function (){
		var self = this;
		return self.ids().map(function(id) { return self.api().db().get(id); });
	};
	
	tag.prototype.load = async function (){
		var v_;
		return (this.setIds(v_ = await (this.query() ? this.api().rpc('search',[this.query()]) : [])),v_);
	};
	
	tag.prototype.reload = function (){
		return this.fetch();
	};
	
	tag.prototype.onsubmit = function (e){
		e.prevent().stop();
		console.log("onsubmit");
		return this.router().go(("/search?q=" + (this._input.value())));
	};
	
	tag.prototype.render = function (){
		var $ = this.$, t0;
		return this.$open(0).setChildren([
			$[0] || _1('header',$,0,this).setContent(
				t0 = $[1] || (t0=_1('form',$,1,0)).flag('wide').flag('search').setContent(
					this._input = this._input||_1('input',t0).flag('input').setType('text').setPlaceholder("Search...")
				,2)
			,2),
			$[2] || _1('article',$,2,this).flag('wide'),
			
			this.footer()
		],1).synced((
			$[1].end((
				this._input.end()
			,true)),
			$[2].setContent(
				this.query() ? (
					($[3] || _1('section',$,3,2).flag('section')).setContent([
						(this.ids().length == 0) ? (
							($[4] || _1('div',$,4,3).flag('header').setContent($[5] || _1('div',$,5,4).flag('desc').flag('muted').setText("Could not find any results"),2))
						) : (
							($[6] || _1('div',$,6,3).flag('header').setContent(
								$[7] || _1('div',$,7,6).flag('desc').flag('muted')
							,2)).end((
								$[7].setText("Found " + (this.ids().length) + " result" + ((this.ids().length > 1) ? 's' : ''))
							,true))
						),
						($[8] || _1(ResultGrid,$,8,3)).setCasts(this.casts()).end()
					],1)
				) : void(0)
			,3)
		,true));
	};
})
exports.SearchPage = SearchPage;


