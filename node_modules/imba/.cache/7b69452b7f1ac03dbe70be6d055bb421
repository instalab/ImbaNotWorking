var Imba = require('imba'), _1 = Imba.createElement;
var UserAvatar = require('./UserAvatar').UserAvatar;
var Formatters$ = require('./Formatters'), TimeAgo = Formatters$.TimeAgo, Duration = Formatters$.Duration, ShortCount = Formatters$.ShortCount, Format = Formatters$.Format;
var Tile = require('./Tile').Tile;
var IconButton = require('uxa').IconButton;
var CoverArt = require('./CoverArt').CoverArt;

var GroupTile = Imba.defineTag('GroupTile', Tile, function(tag){
	
	tag.reg('g');
	
	tag.Renderer = function (data,key,context){
		let key_, $ = this.$$ || (this.$$ = {}), $1;
		return ($[($1 = 'key$' + key)] || _1(GroupTile,$,$1,this)).setData(data).setContext(context).end();
	};
	
	tag.prototype.context = function(v){ return this._context; }
	tag.prototype.setContext = function(v){ this._context = v; return this; };
	
	tag.prototype.url = function (){
		return ("/g/" + (this.data().id));
	};
	
	tag.prototype.canEdit = function (){
		return this.data().uid == this.api().uid() || this.api().isMod();
	};
	
	tag.prototype.render = function (){
		var $ = this.$;
		return this.$open(0).setFlag(-1,this.data().id).setFlag(-2,this.data().type).setFlag(-3,this.data().topic_id).flagIf('mine',(this.data().uid == this.api().uid())).setChildren([
			this.data().coverart ? (
				($[0] || _1(CoverArt,$,0,this).flag('art').flag('figure')).bindData(this.data(),'coverart').end()
			) : void(0),
			($[1] || _1('div',$,1,this).flag('summary').flag('abs').setContent(
				$[2] || _1('div',$,2,1).flag('title').setContent($[3] || _1('a',$,3,2),2)
			,2)).end((
				$[3].setHref(this.url()).setContent(this.data().title,3).end()
			,true))
		],1).synced();
	};
})
exports.GroupTile = GroupTile;
