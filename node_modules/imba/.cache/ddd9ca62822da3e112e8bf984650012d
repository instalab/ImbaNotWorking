function iter$(a){ return a ? (a.toArray ? a.toArray() : a) : []; };
function Disposer(){
	this._items = [];
};

exports.Disposer = Disposer; // export class 
Disposer.prototype.add = function (item){
	this._items.push(item);
	return this;
};

Disposer.prototype.on = function (target,name,cb){
	return this.add(target.on(name,cb));
};

Disposer.prototype.dispose = function (){
	for (let i = 0, items = iter$(this._items), len = items.length, item; i < len; i++) {
		item = items[i];
		if (!item) { continue; };
		if (item.listener) {
			item.listener = null;
			item.times = 0;
		};
	};
	return this._items = [];
};
