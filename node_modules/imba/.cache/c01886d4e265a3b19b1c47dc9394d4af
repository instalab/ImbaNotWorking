var Imba = require('imba');
var protocol$ = require('../protocol'), ACTION = protocol$.ACTION, SCON = protocol$.SCON;
var Widget = require('./widget').Widget;

function MediaStreamWidget(){ return Widget.apply(this,arguments) };

Imba.subclass(MediaStreamWidget,Widget);
exports.MediaStreamWidget = MediaStreamWidget; // export class 
MediaStreamWidget.register('mediastream');

MediaStreamWidget.option('aid'); // agent id
MediaStreamWidget.option('pid'); // peer id
MediaStreamWidget.option('fid'); // file id
MediaStreamWidget.option('audio');
MediaStreamWidget.option('video');
MediaStreamWidget.option('readyState'); // closed?
MediaStreamWidget.option('mimeType');
MediaStreamWidget.option('delay',{'default': 0});
MediaStreamWidget.option('duration',{'default': 0});

MediaStreamWidget.prototype.setup = function (){
	this.space().widgets().add(this,this.id());
	return this;
};

MediaStreamWidget.prototype.fileId = function (){
	return this;
};

MediaStreamWidget.prototype.mount_ = function (){
	this.owner().widgets().add(this,this._id);
	return this;
};

MediaStreamWidget.prototype.unmount_ = function (){
	this.owner().widgets().remove(this);
	return this;
};
