function len$(a){
	return a && (a.len instanceof Function ? a.len() : a.length) || 0;
};
var Imba = require('imba'), _1 = Imba.createElement;
var uxa$ = require('uxa'), Menu = uxa$.Menu, MenuItem = uxa$.MenuItem;

var Playlist = require('../../models/Playlist').Playlist;

var CastMenu = Imba.defineTag('CastMenu', Menu, function(tag){
	
	tag.prototype.context = function(v){ return this._context; }
	tag.prototype.setContext = function(v){ this._context = v; return this; };
	
	tag.prototype.render = function (){
		var $ = this.$;
		var canEdit = this.data().can(this.api().user(),'edit');
		return this.$open(0).flag('inset').setChildren([
			canEdit ? (
				($[0] || _1(MenuItem,$,0,this).setIcon('>').setAction('castedit').setLabel("Edit cast details")).end()
			) : void(0),
			($[1] || _1(MenuItem,$,1,this).setIcon('>').setAction('castjoinplaylist').setLabel("Add to playlist")).end(),
			// <MenuItem action='castfeature' label="Feature cast">
			// <MenuItem action='castunfeature' label="Unfeature cast">
			((this.context() instanceof Playlist) && this.context().can(this.api().user(),'edit')) ? Imba.static([
				($[2] || _1('hr',$,2,this)),
				($[3] || _1(MenuItem,$,3,this).setIcon('.').setAction('listmoveup').setLabel("Move up in playlist")).setDisabled((this.listIndex() == 0)).end(),
				($[4] || _1(MenuItem,$,4,this).setIcon('.').setAction('listmovedown').setLabel("Move down in playlist")).setDisabled((this.listIndex() == this.listLen() - 1)).end(),
				($[5] || _1(MenuItem,$,5,this).flag('neg').setIcon('x').setAction('listdel').setLabel("Remove from playlist")).end()
			],2,1) : void(0),
			
			canEdit ? Imba.static([
				($[6] || _1('hr',$,6,this)),
				($[7] || _1(MenuItem,$,7,this).flag('neg').setIcon('x').setAction('castdel').setLabel("Delete cast")).end()
			],2,2) : void(0)
		],1).synced();
	};
	
	tag.prototype.onlistdel = async function (e){
		e.halt();
		
		var items = this.context().items().slice();
		var idx = items.indexOf(this.data());
		
		if (idx < 0) { return };
		
		items.splice(idx,1);
		
		var txt = ("Are you sure you want to remove '" + (this.data().title) + "'' from playlist '" + (this.context().title) + "'?");
		var res = await e.uxa().confirm(txt);
		if (res) {
			return this.context().update({item_ids: items.map(function(item) { return item.id; })});
		};
	};
	
	tag.prototype.onlistmoveup = function (e){
		e.halt();
		var items = this.context().items().slice();
		var idx = this.listIndex();
		// remove item
		items.splice(idx,1);
		items.splice(idx - 1,0,this.data());
		this.log("new items",items);
		return this.context().update({item_ids: items.map(function(item) { return item.id; })});
	};
	
	
	tag.prototype.onlistmovedown = function (e){
		e.halt();
		var items = this.context().items().slice();
		var idx = this.listIndex();
		// remove item
		items.splice(idx,1);
		items.splice(idx + 1,0,this.data());
		this.log("new items",items);
		return this.context().update({item_ids: items.map(function(item) { return item.id; })});
	};
	
	tag.prototype.listIndex = function (){
		return this.context().items().indexOf(this.data());
	};
	
	tag.prototype.listLen = function (){
		return len$(this.context().items());
	};
})
exports.CastMenu = CastMenu;
