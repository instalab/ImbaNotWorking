var self = {};
// externs;

var selectionModel;


exports.inlineCompiledCode = self.inlineCompiledCode = function (model,editor,o){
	if(o === undefined) o = {};
	return new (monaco.Promise)(async function(resolve,reject) {
		let header = "compiles to:";
		let uri = String(model.uri);
		
		let worker = monaco.IMBA_WORKER;
		let code = model.getValue();
		let file = model.FILE_MODEL.file();
		let selection = model.getValueInRange(editor.getSelection());
		
		code = code.split("\n### " + header)[0];
		
		if (selection.length > 0) {
			selectionModel || (selectionModel = monaco.editor.createModel("",null,"tempSelFile.imba"));
			selection += '\n';
			selectionModel.setValue(selection);
			uri = String(selectionModel.uri);
		};
		
		worker = await worker(uri);
		var out = await worker.getCompiledCode(uri);
		
		
		// this includes the actual js as well
		// console.log "result!",out
		out = out.split(("\n/* " + header))[0];
		
		// remove the first line
		if (out.slice(0,20).indexOf("var Imba =") >= 0) {
			out = out.slice(out.indexOf("\n") + 1);
		};
		
		// replace all code for now
		code = code + "\n### " + header + "\n\n" + out; // + "\n###"
		
		if (file) {
			file.replaceBody(code);
		};
		return resolve(true);
	});
};
