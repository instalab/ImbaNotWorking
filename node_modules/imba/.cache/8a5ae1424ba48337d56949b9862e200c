var Imba = require('imba'), _1 = Imba.createElement;
var Icon = require('./Icon').Icon;

var MenuItem = Imba.defineTag('MenuItem', 'a', function(tag){
	tag.prototype.action = function(v){ return this._action; }
	tag.prototype.setAction = function(v){ this._action = v; return this; };
	tag.prototype.icon = function(v){ return this._icon; }
	tag.prototype.setIcon = function(v){ this._icon = v; return this; };
	tag.prototype.rightIcon = function(v){ return this._rightIcon; }
	tag.prototype.setRightIcon = function(v){ this._rightIcon = v; return this; };
	tag.prototype.label = function(v){ return this._label; }
	tag.prototype.setLabel = function(v){ this._label = v; return this; };
	tag.prototype.subtext = function(v){ return this._subtext; }
	tag.prototype.setSubtext = function(v){ this._subtext = v; return this; };
	tag.prototype.disabled = function(v){ return this.getAttribute('disabled'); }
	tag.prototype.setDisabled = function(v){ this.setAttribute('disabled',v); return this; };
	
	tag.prototype.contextData = function (){
		var data = null;
		var el = this;
		while (el){
			if (data = el.data()) {
				return data;
			};
			el = el.parent();
		};
		return null;
	};
	
	tag.prototype.ontap = function (e){
		if (this.href()) {
			this.trigger('uxa:hide');
			return tag.prototype.__super__.ontap.call(this,e);
		};
		
		e.prevent().stop().silence();
		
		var action = this.action();
		
		if ((typeof action=='string'||action instanceof String)) {
			this.trigger(action,this.contextData());
		} else if (action instanceof Array) {
			this.trigger(action[0],action.slice(1));
		} else {
			this.trigger('activate');
		};
		
		return this.trigger('uxa:hide');
	};
	
	tag.prototype.render = function (){
		var $ = this.$;
		return this.$open(0).setChildren([
			this.icon() ? (
				($[0] || _1(Icon,$,0,this).flag('left')).bindData(this,'icon',[]).end()
			) : void(0),
			this.label() ? (
				($[1] || _1('div',$,1,this).flag('text')).setNestedAttr('uxa','md',this.label()).end()
			) : void(0),
			this.subtext() ? (
				($[2] || _1('div',$,2,this).flag('subtext').flag('muted')).setNestedAttr('uxa','md',this.subtext()).end()
			) : void(0),
			this.rightIcon() ? (
				($[3] || _1(Icon,$,3,this).flag('right')).bindData(this,'rightIcon',[]).end()
			) : void(0)
		],1).synced();
	};
})
exports.MenuItem = MenuItem;
