var Imba = require('imba'), _1 = Imba.createElement;
var util = require('../util');

var MediaRecordingStats = Imba.defineTag('MediaRecordingStats', function(tag){
	
	tag.prototype.s = function (val){
		return util.msToStr(val,3) + 's';
	};
	
	tag.prototype.render = function (){
		var $ = this.$;
		return this.$open(0).setChildren([
			($[0] || _1('span',$,0,this).flag('state')).setContent(this.data().state(),3),
			($[1] || _1('span',$,1,this).flag('mime')).setContent(this.data().mimeType(),3),
			($[2] || _1('span',$,2,this).flag('size')).setContent(Math.round(this.data().size() / 1000) + 'kb',3),
			
			// if data.@blobDuration
			//	<span.dur.element> s(data.@blobDuration)
			// if data.@timecodeDuration
			//	<span.dur.timecode> s(data.@timecodeDuration)
			this.data()._bufferDuration ? (
				($[3] || _1('span',$,3,this).flag('dur').flag('timecode')).setContent([
					this.s(this.data()._duration),
					$[4] || _1('b',$,4,3).flag('diff')
				],1).end((
					$[4].setContent(Math.round(this.data()._duration - this.data()._calcDuration) + 'ms',3)
				,true))
			) : (
				($[5] || _1('span',$,5,this).flag('dur')).setContent(this.s(this.data().duration()),3)
			)
		],1).synced();
	};
})
exports.MediaRecordingStats = MediaRecordingStats;
