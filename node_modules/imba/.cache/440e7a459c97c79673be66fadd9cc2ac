var Imba = require('imba'), _1 = Imba.createElement;
var uxa$ = require('uxa'), Dialog = uxa$.Dialog, TextField = uxa$.TextField, TextArea = uxa$.TextArea;

// externs;

var PublishDialog = Imba.defineTag('PublishDialog', Dialog, function(tag){
	
	tag.prototype.model = function (){
		return this.data().model();
	};
	
	tag.prototype.toggleBusy = function (){
		return this.toggleFlag('busy');
	};
	
	tag.prototype.submitLabel = function (){
		return this.model().isPublished() ? "publish again" : "publish";
	};
	
	tag.prototype.body = function (){
		let $ = this.$$ || (this.$$ = {}), t0;
		return (t0 = this._body = this._body||(t0=_1('div',this)).flag('body').setContent([
			_1('h1',t0.$,'A',t0).setText("Publish screencast"),
			_1(TextField,t0.$,'B',t0).setType('text').setName('title').setLabel('Title').setRequired(true).setPlaceholder('Untitled cast').setAutocomplete("off"),
			_1(TextArea,t0.$,'C',t0).flag('mb-md').setName('description').setLabel('Description').setDesc('Short description (markdown supported)'),
			_1('input',t0.$,'D',t0).setType("hidden").setName('privacy').setValue('public',1)
		],2)).end((
			t0.$.B.end(),
			t0.$.C.end(),
			t0.$.D.end()
		,true));
	};
	
	tag.prototype.onuxashow = function (e){
		var v_;
		console.log('onuxashow',e);
		return (this.setFormData(v_ = this.data().model()),v_);
	};
	
	tag.prototype.onuxasubmit = function (e){
		// first validate forms no?
		var self = this;
		return self.uxa().queue().add(10000,async function() {
			var values = self.formData();
			await self.model().update(
				{title: values.title,
				description: values.description}
			);
			
			var resp = await self.data().publish(values);
			self.log("response from await",resp);
			return self.api().analytics().cast(self.model().id,'Published');
		});
	};
})
exports.PublishDialog = PublishDialog;
