function len$(a){
	return a && (a.len instanceof Function ? a.len() : a.length) || 0;
};
var Imba = require('imba');

var Icon = Imba.defineTag('Icon', 'i', function(tag){
	tag.prototype.__data = {watch: 'dataDidSet',name: 'data'};
	tag.prototype.data = function(v){ return this._data; }
	tag.prototype.setData = function(v){
		var a = this.data();
		if(v != a) { this._data = v; }
		if(v != a) { this.dataDidSet && this.dataDidSet(v,a,this.__data) }
		return this;
	};
	
	tag.prototype.build = function (){
		return this.flag('uxa');
	};
	
	tag.prototype.dataDidSet = function (icon){
		// console.log "Icon#dataDidSet",icon
		if ((typeof icon=='string'||icon instanceof String)) {
			if (len$(icon) == 1) { // and "xwvo*-=+><:.^".indexOf(icon) >= 0
				this.setText(icon);
			} else if (icon.indexOf('<svg') >= 0) {
				this.flag('svg');
				this.dom().innerHTML = icon;
			};
		};
		return this;
	};
})
exports.Icon = Icon;
