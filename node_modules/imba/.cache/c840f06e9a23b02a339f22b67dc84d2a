var Imba = require('imba'), _1 = Imba.createElement;
var Page = require('./Page').Page;

var UserAvatar = require('../components/UserAvatar').UserAvatar;
var PlaylistSection = require('../components/PlaylistSection').PlaylistSection;
var CollectionSection = require('../components/CollectionSection').CollectionSection;
var CastTile$ = require('../components/CastTile'), CastTile = CastTile$.CastTile, CastListItem = CastTile$.CastListItem;
var Carousel = require('../components/Carousel').Carousel;

var PlaylistTile = require('../components/PlaylistTile').PlaylistTile;
var GroupTile = require('../components/GroupTile').GroupTile;
var UserTile = require('../components/UserTile').UserTile;

var uxa$ = require('uxa'), Button = uxa$.Button, Actionable = uxa$.Actionable;

var TopicPage = Imba.defineTag('TopicPage', Page, function(tag){
	tag.prototype.tid = function(v){ return this._tid; }
	tag.prototype.setTid = function(v){ this._tid = v; return this; };
	tag.prototype.courses = function(v){ return this._courses; }
	tag.prototype.setCourses = function(v){ this._courses = v; return this; };
	tag.prototype.lessons = function(v){ return this._lessons; }
	tag.prototype.setLessons = function(v){ this._lessons = v; return this; };
	tag.prototype.instructors = function(v){ return this._instructors; }
	tag.prototype.setInstructors = function(v){ this._instructors = v; return this; };
	
	tag.prototype.path = function (){
		return [];
	};
	
	tag.prototype.load = async function (){
		var lessons_, courses_, v_;
		this.setData(await this.api().prefetch(['topic',this.tid()]));
		// console.log "returned from TopicPage",data
		// history ||= api.db.viewings.sel(sort: '-updated_at') do yes
		(courses_ = this.courses()) || ((this.setCourses(v_ = this.api().db().groups().sel({sort: '-created_at'},function(_0) { return _0.type == 'course' && _0.coverart; })),v_));
		return (lessons_ = this.lessons()) || ((this.setLessons(v_ = this.api().db().spaces().sel({sort: '-published_at'},function(_0) { return _0.published_at && !_0.archived_at && _0.privacy == 'public' && _0.type == 'tutorial'; })),v_));
	};
	
	
	tag.prototype.mount = function (){
		this.schedule({events: true});
		App.setScrollTop(0);
		return this.render();
	};
	
	tag.prototype.unmount = function (){
		return this.unschedule();
	};
	
	tag.prototype.render = function (){
		var $ = this.$;
		let user = this.api().user();
		return this.$open(0).setChildren([
			$[0] || _1('header',$,0,this).setContent(
				$[1] || _1('div',$,1,0).flag('wide').flag('what').setContent([
					_1('h1',$,2,1).setText("Hello, future expert"),
					_1('p',$,3,1).flag('lead').setText("Scrimba is a powerful new way of learning code.\nPlay around with the instructors code any time, right in the player."),
					_1('div',$,4,1).flag('cta').setContent($[5] || _1('a',$,5,4).setHref("/c/cKp6LhL").setText("Read more"),2)
				],2)
			,2),
			
			$[6] || _1('article',$,6,this).flag('wide'),
			// possible with custom page content?
			this.footer()
		],1).synced((
			$[5].end()
		,true));
	};
})
exports.TopicPage = TopicPage;
