var Imba = require('imba');
var Resource$ = require('../store/Resource'), Resource = Resource$.Resource, MASK = Resource$.MASK, ACCESS = Resource$.ACCESS;

function Message(){ return Resource.apply(this,arguments) };

Imba.subclass(Message,Resource);
exports.Message = Message; // export class 
Message.prototype.dependsOn = function (){
	return [this.user()];
};

Message.prototype.user = function (){
	return this.db().get(this.uid);
};

Message.prototype.parent = function (){
	return this.parent_id ? this.db().get(this.parent_id) : null;
};

Message.prototype.trunk = function (){
	return this.isFork() ? this.parent() : this;
};

Message.prototype.cast = function (){
	return this.db().get(this.cid);
};

Message.prototype.replies = function (){
	var self = this;
	return self._cache.replies || (self._cache.replies = self.db().messages().sel({sort: 'ts'},function(c) { return c.parent_id == self.id; }));
};
