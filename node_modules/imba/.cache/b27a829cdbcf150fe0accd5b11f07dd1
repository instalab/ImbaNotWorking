var self = {};

// var csscolorfunc = require 'css-color-function'
var csscolorcache = {};

self.rewriteColor = function (text){
	let start = 0;
	let index = 0;
	let len = text.length;
	let chr;
	let replaces = [];
	let k = 0;
	while (true && k < 1000){
		k++;
		index = start = text.indexOf("color(",index);
		
		let depth = 1;
		if (index == -1) { break; };
		
		index += 6;
		
		// find the closing bracket
		while (depth > 0 && index < len){
			if (text[index] == '(') {
				depth++;
			} else if (text[index] == ')') {
				depth--;
			};
			index++;
		};
		
		replaces.unshift([start,index - start]);
	};
	
	// console.log replaces
	for (let i = 0, len_ = replaces.length, item; i < len_; i++) {
		item = replaces[i];
		let val = text.substr(item[0],item[1]);
		let conv = csscolorcache[val] || (csscolorcache[val] = self.csscolorfunc().convert(val));
		text = text.replace(val,conv);
	};
	
	return text;
};

exports.process = self.process = function (text,o){
	
	if(o === undefined) o = {};
	if (o.rewritePseudoStates) {
		text = text.replace(/:(hover|focus|active)\b/g,function(m,state) { return (".__" + state); });
	};
	
	// rewrite colors
	// try text = rewriteColor(text)
	
	return text;
};
