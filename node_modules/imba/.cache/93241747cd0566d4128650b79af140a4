var PacketChannel = require('../scrimba/core/PacketChannel').PacketChannel;

function PeerWebSocket(peer,socket){
	this._peer = peer;
	this._socket = socket;
	this._channel = new PacketChannel(this);
};

exports.PeerWebSocket = PeerWebSocket; // export class 
PeerWebSocket.prototype.channel = function(v){ return this._channel; }
PeerWebSocket.prototype.setChannel = function(v){ this._channel = v; return this; };
PeerWebSocket.prototype.peer = function(v){ return this._peer; }
PeerWebSocket.prototype.setPeer = function(v){ this._peer = v; return this; };

PeerWebSocket.prototype.api = function (){
	return this._peer.api();
};

PeerWebSocket.prototype.onpacket = function (packet){
	console.log("PeerWebSocket.onpacket",this._peer.id,packet.CODE);
	return this.api().onpacket(packet);
};

PeerWebSocket.prototype.sendPacket = function (packet){
	return this._socket.send(packet);
};
